Computational Methods in Plasma Physics 2019
++++++++++++++++++++++++++++++++++++++++++++

These are notes, lecture slides and code for use in `PPPL
<https://www.pppl.gov>`_'s `Graduate Summer School
<https://gss.pppl.gov/2019/>`_, Computational Methods in Plasma
Physics mini-course. All material is copyrighted by Ammar Hakim and
released under the `Creative Commons CC BY License
<https://creativecommons.org/licenses/>`_.

.. contents::

Background
----------

Vast majority of plasma physics is contained in the Vlasov-Maxwell
equations that describes the evolution of a particle distribution
:math:`f_s(t,\mathbf{x},\mathbf{v})` function in 6D phase-space. The
particles move in electromagnetic fields that come from two sources:
external coils and electrodes and the fields generated by the motion
of the particles themselves. This makes the problem highly nonlinear:
the fields tell the particles how to move, and the particles motion
itself modifies the fields.

.. math::

   \frac{\partial f_s}{\partial t}
   + \nabla_\mathbf{x} \cdot (\mathbf{v}f_s)
   + \nabla_\mathbf{v} \cdot (\mathbf{a}_s f_s)
   =
   \left( \frac{\partial f_s}{\partial t} \right)_c
	
where :math:`\mathbf{a}_s =
q_s/m_s(\mathbf{E}+\mathbf{v}\times\mathbf{B})` is the acceleration
due to Lorentz force on the particle and the right-hand side describes
the effect of collisions. Of course, the electromagnetic fields are
determined from Maxwell equations

.. math::

   \epsilon_0\mu_0 \frac{\partial \mathbf{E}}{\partial t}
   - \nabla_\mathbf{x} \times \mathbf{B} &= -\mu_0
     \sum_s q_s \int_{-\infty}^{\infty} v f_s d\mathbf{v}^3 \\
   \frac{\partial \mathbf{B}}{\partial t}
   + \nabla_\mathbf{x} \times \mathbf{E} &= 0 \\
   \nabla_\mathbf{x}\cdot\mathbf{E} &=
   \frac{1}{\epsilon_0}\sum_s q_s \int_{-\infty}^{\infty} f_s d\mathbf{v}^3 \\
   \nabla_\mathbf{x}\cdot\mathbf{B} &= 0.

Suitable modifications are required to account for relativistic
effects.
   
Having written the basic equations it may appear that the field of
plasma physics is complete. However, this is far from the case. The
Vlasov-Maxwell system is a formidable system of coupled, nonlinear
equations and describes vast physics that spans an enormous range of
temporal and spatial scales. Everything from electron oscillations to
slow, resistive evolution of objects in near equilibrium is contained
within them. Hence, over the decades many approximations to the
Vlasov-Maxwell equations have been developed that are often more
tractable, allowing one to obtain reasonable results in specific
physical situations. Of course, the frontier in computational and
theoretical plasma physics remains the complete kinetic understanding
of plasma from the full Vlasov-Maxwell equations, and much of the
recent research focus has been on solving them (or asymptotic
approximations in strong magnetic fields) directly.

In this mini-course we will look at the key modern computational
techniques to handle various problems in plasma physics. This field
remains an active area of research, and in the recent years has
undergone a renaissance of sorts. My goal will be give you a flavor of
the methods and point out key literature in this field. In particular
we will study:

- Near first-principles simulations methods in which the
  Vlasov-Maxwell equation is solved directly. We will study two
  methods: the finite-difference-time-domain particle-in-cell method
  (FDTD PIC) (Lectures 1 and 2)

- Solving fluid equations that are obtained from taking moments of the
  Vlasov-Maxwell equations and making a closure to approximate the
  moments not evolved by the fluid equations. Here we will study the
  modern approach based on the theory of hyperbolic PDEs and Riemann
  solvers. We will also look at the special requirements of solvers
  that are required to study fusion problems (Lecture 3).

- Directly discretizing the Vlasov-Maxwell equations as a PDE in
  6D. This is an emerging area of active research and has applications
  to study of turbulence in fusion machines and also exploring
  fundamental plasma physics in phase-space. (Lecture 4)

Through these topics we will look at the general applied mathematics
literature for solvers for ordinary differential equations (ODEs) and
partial differential equations (PDEs), with emphasis of those
techniques that are useful in plasma physics.

Bitbucket repo for lectures and code
------------------------------------

You can get all the tex files for the slides, source for this website
and the code I ran in class by cloning the `Bitbucket repo
<https://bitbucket.org/ammarhakim/summer-school-cmpp/>`_ for this
class.

To run the code you need to install the Gkeyll software. Please see
the `Gkeyll website <http://gkeyll.readthedocs.io>`_ for instructions
on how to get the code and the postprocessing tools needed. In brief:

- Install the Python `(mini)conda <https://conda.io/miniconda.html>`_
  package manager
  
- Install the Gkeyll code using::

    conda install -c gkyl gkeyll

- Install the postprocessing tool as::

    conda install -c gkyl postgkyl

Lecture 1: Introduction and Specialized Ordinary Differential Equations Solvers
-------------------------------------------------------------------------------

`PDF of Lecture 1 slides <./_static/lec1.pdf>`_

Code
====

See files `code/lec1/sho-fwd-euler.lua
<https://bitbucket.org/ammarhakim/summer-school-cmpp/src/master/code/lec1/sho-fwd-euler.lua>`_
and `code/lec1/sho-mid-point.lua
<https://bitbucket.org/ammarhakim/summer-school-cmpp/src/master/code/lec1/sho-mid-point.lua>`_
for forward Euler and mid-point schemes for harmonic oscillator
problem. You can run the code from the directory it is kept as::

  gkyl sho-mid-point.lua

To plot the trajectory do::

  pgkyl -f sho-mid-point_ptclData.bp traj -e 90 -a 0.0 --fix-aspect

You can get help for options for the `traj` command by doing::

  pgkyl traj --help

To plot the exact trajectory and the computed trajectory do::

  pgkyl -f sho-mid-point_ptclData.bp -f sho-mid-point_exactData.bp traj -e 90 -a 0.0 --fix-aspect

You can save the animate to an mp4 file by passing the `--save` option
to the `traj` command. This requires that you have the `ffmpeg package
<https://ffmpeg.org>`_ installed.

Summary
=======

Read above introductory summary for overall background. It is
important to understand how to derive conservation and other
properties of the Vlasov-Maxwell system. Much of modern computational
plasma physics is focused on inventing schemes that preserve at least
some of these properties of the continuous system. See any plasma text
book or the following `excerpt
<./_static/Juno-et-al-JCP-2018-Proofs.pdf>`_ from [Juno2019]_ for
proofs.

The concept of phase-space volume preserving and symplectic schemes
can be more easily understood by looking at the example of a simple
harmonic oscillator

.. math::

   \frac{d^2z}{dt^2} = -\omega^2 z

where :math:`\omega` is the oscillation frequency.

To fully understand the physics behind these concepts one needs to
understand the *Lagrangian and Hamiltonian formulation* of
mechanics. For example, see text book of `Goldstein
<https://www.amazon.com/Classical-Mechanics-Pearson-New-International/dp/1292026553>`_
or first volume of `Landau and Lifshitz, Mechanics
<https://archive.org/details/Mechanics_541>`_. An overview of
Hamiltonian mechanics using *noncanonical coordinates* as applied to
single particle motion is given in Section II of [CaryBrizard2009]_.

A good description of various ODE solvers and their properties is
given in Chapter 2 of [DurranBook]_. Also `see
<https://gkeyll.readthedocs.io/en/latest/dev/ssp-rk.html>`_ for
formulas of the Strong-Stability preserving RK methods and their
stability regions.

Several ODE schemes have been designed to handle stiff sources and in
particular, diffusion terms arising from discretization of diffusion
equations. See [Abdulle2013]_ and also [Meyer2013]_ for description of
these schemes. In particular, the scheme by Meyer at al is to be
preferred to it superior stability properties.

The ODE solvers described above are low order, that is second or third
order. Some recent work attempts to construct very high order schemes
(10-15th order!) that essentially makes the issues of conservation and
other numerical errors mostly moot. For example, see [ReinSpiegel]_
for a 15th order scheme for use in gravitational N-body
simulations. Such very high-order schemes have not found use in
plasma-physics yet, mainly as the Maxwell solvers used in PIC codes
are mostly second-order anyway. However, it is possible that these
very high-order methods are useful in orbit codes.


Lecture 2: The Boris algorithm and FDTD and FV schemes for Maxwell equations
----------------------------------------------------------------------------

`PDF of Lecture 2 slides <./_static/lec2.pdf>`_. Solution to the
problem of finding :math:`\mathbf{A}` if :math:`\mathbf{A} =
\mathbf{R} + \mathbf{A}\times\mathbf{B}` is `here
<./_static/ammar-hackmem-a=r+axb.pdf>`_.

Code
====

See files `code/lec2/lorentz-boris.lua
<https://bitbucket.org/ammarhakim/summer-school-cmpp/src/master/code/lec2/lorentz-boris.lua>`_

You can play with this file to do various static or time-dependent
electromagnetic fields. For example, motion in a constant magnetic
field, in a field with a gradient, and in a driven system. See field
specification in `this write up
<http://ammar-hakim.org/sj/je/je32/je32-vlasov-test-ptcl.html>`_ for
both non-resonant and resonant drivers.

Summary
=======

Particle-in-cell methods are based on pushing macro-particles. These
represent the motion of characteristics in phase-space, along which
the distribution function is conserved. The macro-particle
equations-of-motion are

.. math::

   \frac{d\mathbf{x}}{dt} &= \mathbf{v} \\
   \frac{d\mathbf{v}}{dt} &= \frac{q}{m}(\mathbf{E} + \mathbf{v}\times\mathbf{B})

The most widely used method to solve this system of ODEs is the *Boris
algorithm*. See `this excerpt
<./_static/Birdsall-Landon-Boris-Push.pdf>`_ from Birdsall and Langdon
book for details on how to implement this efficiently.

The Boris algorithm is surprisingly good: it is a *second-order*,
*time-centered* method that *conserves phase-space volume*. However,
the error in phase-velocity (that is there is an error in time-period
of orbits) accumulates *linearly*, as we saw for the harmonic
oscillator. See [Qin2013]_ for proofs that the Boris algorithm is
*not* symplectic but conserves phase-space volume.

The relativistic Boris algorithm does not compute the correct
:math:`\mathbf{E}\times\math{B}` velocity. This can be corrected for
and still maintain the volume-preserving property and was done in
[HigueraCary2017]_.

The Yee-cell preserves the underlying geometric structure of Maxwell
equations, and ensures that the divergence relations are maintained in
the case of vacuum fields. In a plasma, however, current deposition
needs to be done carefully to ensure current continuity is
satisfied. See [Esirkepov2001]_, for example.

For extension of standard FDTD method to complex geometries, see, for
example [Nieter2009]_ and other references. Recent research has
focused on developing finite-element based PIC codes (that maintain
geometric structure of Maxwell equations), but these are usually very
expensive to run and very complex to develop.

Sometimes finite-volume schemes are also used to solve Maxwell
equations. These may have some advantages and disadvantages compared
to standard FDTD schemes. For example, FV usually do not conserve
energy and find it hard to satisfy divergence relations. For a
comparison of FV and FDTD methods see `this page
<http://ammar-hakim.org/sj/je/je6/je6-maxwell-solvers.html>`_.

A comprehensive review of structure preserving algorithms for use in
plasma physics is provided by [Morrison2017]_. It has numerous
references to the literature and should be consulted to develop a
detailed understanding of such schemes.


References
----------

.. [Juno2019] Juno, J., Hakim, A., TenBarge, J., Shi, E.,
  Dorland, W. (2018). "Discontinuous Galerkin algorithms for fully
  kinetic plasmas", *Journal of Computational Physics*, **353**,
  110–147. http://doi.org/10.1016/j.jcp.2017.10.009

.. [CaryBrizard2009] Cary, J. R., &
   Brizard, A. J. (2009). "Hamiltonian theory of guiding-center
   motion". Reviews of Modern Physics, **81** (2),
   693–738. http://doi.org/10.1103/RevModPhys.81.693

.. [DurranBook] Dale E. Durran, "Numerical Methods for Fluid
   Dynamics", Springer. Second Edition.   

.. [Abdulle2013] Abdulle, A., & Vilmart, G. (2013). "PIROCK: A
   swiss-knife partitioned implicit–explicit orthogonal Runge–Kutta
   Chebyshev integrator for stiff diffusion–advection–reaction
   problems with or without noise". Journal of Computational Physics,
   **242** (C), 869–888. http://doi.org/10.1016/j.jcp.2013.02.009

.. [Meyer2013] Meyer, C. D., Balsara, D. S., & Aslam, T. D. (2014). "A
   stabilized Runge–Kutta–Legendre method for explicit
   super-time-stepping of parabolic and mixed equations". Journal of
   Computational Physics, **257** (PA),
   594–626. http://doi.org/10.1016/j.jcp.2013.08.021

.. [ReinSpiegel] Rein, H., & Spiegel, D. S. (2014). ias15: a fast,
   adaptive, high-order integrator for gravitational dynamics,
   accurate to machine precision over a billion orbits. Monthly
   Notices of the Royal Astronomical Society, 446(2),
   1424–1437. http://doi.org/10.1093/mnras/stu2164

.. [Qin2013] Qin, H., Zhang, S., Xiao, J., Liu, J., Sun, Y., &
   Tang, W. M. (2013). "Why is Boris algorithm so good?"  Physics of
   Plasmas, **20** (8), 084503–5. http://doi.org/10.1063/1.4818428

.. [HigueraCary2017] Higuera, A. V., &
   Cary, J. R. (2017). "Structure-preserving second-order integration
   of relativistic charged particle trajectories in electromagnetic
   fields". Physics of Plasmas, **24** (5),
   052104–7. http://doi.org/10.1063/1.4979989

.. [Esirkepov2001] Esirkepov, T. Z. (2001). "Exact charge conservation
   scheme for Particle-in-Cell simulation with an arbitrary
   form-factor", Computer Physics Communications, **135**, 144–153.

.. [Nieter2009] Nieter, C., Cary, J. R., Werner, G. R., Smithe, D. N.,
   & Stoltz, P. H. (2009). "Application of Dey–Mittra conformal
   boundary algorithm to 3D electromagnetic modeling". Journal of
   Computational Physics, **228** (21),
   7902–7916. http://doi.org/10.1016/j.jcp.2009.07.025
   
.. [Morrison2017] Morrison, P. J. (2017). Structure and
   structure-preserving algorithms for plasma physics. Physics of
   Plasmas, **24** (5), 055502–21. http://doi.org/10.1063/1.4982054
   
